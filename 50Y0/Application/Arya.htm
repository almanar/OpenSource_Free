<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [C:\Documents and Settings\Sandip\Desktop\50Y0\Application\Arya.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image C:\Documents and Settings\Sandip\Desktop\50Y0\Application\Arya.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Tue May 29 16:51:15 2012
<BR><P>
<H3>Maximum Stack Usage =        360 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Process_Card &rArr; GetCreditCardAmount &rArr; WaitForAcceptance &rArr; ProcessUartRxBuffers &rArr; ProcessBuffer &rArr; ParseCommandForMeter &rArr; SendCommandToMeter &rArr; DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[c48568]">Reset_Handler</a>
 <LI><a href="#[c485a4]">__user_initial_stackheap</a>
 <LI><a href="#[c487c0]">Undef_Handler</a>
 <LI><a href="#[c48784]">SWI_Handler</a>
 <LI><a href="#[c48748]">PAbt_Handler</a>
 <LI><a href="#[c4870c]">DAbt_Handler</a>
 <LI><a href="#[c486d0]">IRQ_Handler</a>
 <LI><a href="#[c48694]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[c487c0]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c487c0]">Undef_Handler</a><BR>
 <LI><a href="#[c48784]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c48784]">SWI_Handler</a><BR>
 <LI><a href="#[c48748]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c48748]">PAbt_Handler</a><BR>
 <LI><a href="#[c4870c]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c4870c]">DAbt_Handler</a><BR>
 <LI><a href="#[c486d0]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c486d0]">IRQ_Handler</a><BR>
 <LI><a href="#[c48694]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c48694]">FIQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c48568]">Reset_Handler</a>
 <LI><a href="#[c487c0]">Undef_Handler</a>
 <LI><a href="#[c48784]">SWI_Handler</a>
 <LI><a href="#[c48748]">PAbt_Handler</a>
 <LI><a href="#[c4870c]">DAbt_Handler</a>
 <LI><a href="#[c486d0]">IRQ_Handler</a>
 <LI><a href="#[c48694]">FIQ_Handler</a>
 <LI><a href="#[c3e824]">__main</a>
 <LI><a href="#[c3ff1c]">main</a>
 <LI><a href="#[c45e08]">Timer0Handler</a>
 <LI><a href="#[c44e54]">UART1Handler</a>
 <LI><a href="#[14c3a54]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[c48568]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c3e824]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[c3e6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[14c1588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[14c1588]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[c3e824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[14c154c]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3e6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[14c1510]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[14c136c]"></a>__scatterload_copy</STRONG> (ARM, 40 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c136c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[14c136c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[14c127c]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[c3cfc4]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Calls]<UL><LI><a href="#[c3aa44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c3de88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li (via Veneer)
</UL>

<P><STRONG><a name="[c3b110]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[c3b188]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[c3b548]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[c3b3e0]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[c3b020]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[c3b098]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[c3b458]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[c3b368]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[c3b944]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[c3b7a0]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[c3b728]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[c3b6b0]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[c3b638]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[c3b5c0]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[c3b854]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[c3afe4]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[c3b4d0]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[c3b2f0]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[c3b8cc]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[14c2e24]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[c3a738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via Veneer)
</UL>

<P><STRONG><a name="[14c1aec]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[14c190c]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[14c18d0]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[14c1a38]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[14c1ba0]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[14c19c0]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[c3e6f8]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[c3e824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[14c154c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[c3df3c]"></a>__rt_entry_presh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[c3dbb8]"></a>__rt_entry_sh</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[c3d7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c3de88]"></a>__rt_entry_li</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[c3cfc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[c3dec4]"></a>__rt_entry_postsh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[c3ddd4]"></a>__rt_entry_main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[c3d654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>

<P><STRONG><a name="[c3de10]"></a>__rt_entry_postli_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[c3c844]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[c3d654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[c3a738]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[14c2e24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>

<P><STRONG><a name="[c3a774]"></a>__rt_exit_prels_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[c3a6fc]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[c3a954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[c485a4]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3d7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c47de8]"></a>DefaultVICHandler</STRONG> (ARM, 20 bytes, Stack size 8 bytes, irq.o(.text), UNUSED)

<P><STRONG><a name="[c47dac]"></a>init_VIC</STRONG> (ARM, 92 bytes, Stack size 0 bytes, irq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c47d70]"></a>install_irq</STRONG> (ARM, 136 bytes, Stack size 8 bytes, irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = install_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[c41998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDTInit
<LI><a href="#[c42154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINTInit
<LI><a href="#[c44da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1Init
<LI><a href="#[c44ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Init
<LI><a href="#[c45ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer1
<LI><a href="#[c45cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer0
</UL>

<P><STRONG><a name="[c47d34]"></a>uninstall_irq</STRONG> (ARM, 148 bytes, Stack size 4 bytes, irq.o(.text), UNUSED)

<P><STRONG><a name="[c46e34]"></a>CHECKFLAG</STRONG> (ARM, 36 bytes, Stack size 0 bytes, global.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c406d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCommandForMeter
<LI><a href="#[c40840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToModem
<LI><a href="#[c4087c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartTxBuffers
<LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
<LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS
<LI><a href="#[c41344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_Card
<LI><a href="#[c42190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT1_Handler
<LI><a href="#[c42910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToMeter
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
<LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c42af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialFixedNo
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
<LI><a href="#[c44e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Handler
<LI><a href="#[c44e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1Handler
<LI><a href="#[c45e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Handler
</UL>

<P><STRONG><a name="[c46df8]"></a>SETFLAG</STRONG> (ARM, 24 bytes, Stack size 0 bytes, global.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c4078c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForAcceptance
<LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
<LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer
<LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS
<LI><a href="#[c41308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCreditCardAmount
<LI><a href="#[c41344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_Card
<LI><a href="#[c42190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT1_Handler
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
<LI><a href="#[c42af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialFixedNo
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
<LI><a href="#[c42c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_GetKey
<LI><a href="#[c43f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteControl
<LI><a href="#[c44e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Handler
<LI><a href="#[c44e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1Handler
<LI><a href="#[c45e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Handler
</UL>

<P><STRONG><a name="[c46dbc]"></a>RESETFLAG</STRONG> (ARM, 24 bytes, Stack size 0 bytes, global.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c4078c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForAcceptance
<LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
<LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS
<LI><a href="#[c41308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCreditCardAmount
<LI><a href="#[c41344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_Card
<LI><a href="#[c42910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToMeter
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
<LI><a href="#[c42ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialOtherNo
<LI><a href="#[c42af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialFixedNo
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
<LI><a href="#[c44e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Handler
<LI><a href="#[c44e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1Handler
<LI><a href="#[c45e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Handler
</UL>

<P><STRONG><a name="[c46d80]"></a>CHECKFLAG1</STRONG> (ARM, 36 bytes, Stack size 0 bytes, global.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c45e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Handler
</UL>

<P><STRONG><a name="[c46d44]"></a>SETFLAG1</STRONG> (ARM, 24 bytes, Stack size 0 bytes, global.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c45e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Handler
</UL>

<P><STRONG><a name="[c46d08]"></a>RESETFLAG1</STRONG> (ARM, 24 bytes, Stack size 0 bytes, global.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c45e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Handler
</UL>

<P><STRONG><a name="[c45e08]"></a>Timer0Handler</STRONG> (ARM, 1908 bytes, Stack size 40 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Timer0Handler &rArr; SendACKToMeter
</UL>
<BR>[Calls]<UL><LI><a href="#[c45c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendACKToMeter
<LI><a href="#[c46d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG1
<LI><a href="#[c46d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG1
<LI><a href="#[c46d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG1
<LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.text)
</UL>
<P><STRONG><a name="[c45dcc]"></a>Timer1Handler</STRONG> (ARM, 32 bytes, Stack size 8 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[c45d90]"></a>enable_timer</STRONG> (ARM, 40 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c45d54]"></a>disable_timer</STRONG> (ARM, 40 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[c45d18]"></a>reset_timer</STRONG> (ARM, 48 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[c45cdc]"></a>init_timer0</STRONG> (ARM, 64 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_timer0 &rArr; install_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[c47d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c45ca0]"></a>init_timer1</STRONG> (ARM, 64 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_timer1 &rArr; install_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[c47d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c45c64]"></a>Delay</STRONG> (ARM, 36 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c4078c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForAcceptance
<LI><a href="#[c407c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIOS
<LI><a href="#[c4087c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartTxBuffers
<LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer
<LI><a href="#[c41308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCreditCardAmount
<LI><a href="#[c41344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_Card
<LI><a href="#[c428d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
<LI><a href="#[c42af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialFixedNo
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
<LI><a href="#[c43f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitDriver
<LI><a href="#[c43f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteControl
<LI><a href="#[c43fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
</UL>

<P><STRONG><a name="[c45688]"></a>SPIInit</STRONG> (ARM, 116 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c4564c]"></a>SPISend</STRONG> (ARM, 80 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c44314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ID
<LI><a href="#[c44350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_DisableBlkProt
<LI><a href="#[c4438c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ChipErase
<LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
<LI><a href="#[c44404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ErasePage
<LI><a href="#[c44440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteDataBytesIntoBuffer
<LI><a href="#[c4447c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBufferToPage
<LI><a href="#[c444b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ByteProgram
<LI><a href="#[c444f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteDataIntoBuffer
<LI><a href="#[c44530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadBytesFromPage
<LI><a href="#[c4456c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadDataBytesFromBuffer
<LI><a href="#[c445e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadPageToBuffer
<LI><a href="#[c44620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadDataFromBuffer
<LI><a href="#[c4465c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_CheckIfBusy
</UL>

<P><STRONG><a name="[c45610]"></a>SPIReceive</STRONG> (ARM, 52 bytes, Stack size 16 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c458a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReceiveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[c44314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ID
<LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
<LI><a href="#[c44530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadBytesFromPage
<LI><a href="#[c4456c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadDataBytesFromBuffer
<LI><a href="#[c445e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadPageToBuffer
<LI><a href="#[c44620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadDataFromBuffer
<LI><a href="#[c4465c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_CheckIfBusy
</UL>

<P><STRONG><a name="[c44e54]"></a>UART1Handler</STRONG> (ARM, 784 bytes, Stack size 40 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART1Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(.text)
</UL>
<P><STRONG><a name="[c44e18]"></a>UART0Handler</STRONG> (ARM, 820 bytes, Stack size 40 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>

<P><STRONG><a name="[c44ddc]"></a>UART0Init</STRONG> (ARM, 164 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = UART0Init &rArr; install_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[c3f238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[c47d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c44da0]"></a>UART1Init</STRONG> (ARM, 160 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = UART1Init &rArr; install_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[c3f238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[c47d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c44d64]"></a>UART0Send</STRONG> (ARM, 80 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c4078c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForAcceptance
<LI><a href="#[c4087c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartTxBuffers
<LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer
<LI><a href="#[c41308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCreditCardAmount
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
<LI><a href="#[c42af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialFixedNo
</UL>

<P><STRONG><a name="[c44d28]"></a>UART0SendBuffer</STRONG> (ARM, 88 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c4087c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartTxBuffers
</UL>

<P><STRONG><a name="[c44cec]"></a>UART1Send</STRONG> (ARM, 80 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3faa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNACKToMeter
<LI><a href="#[c406d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCommandForMeter
<LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer
<LI><a href="#[c42910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToMeter
<LI><a href="#[c45c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendACKToMeter
</UL>

<P><STRONG><a name="[c4465c]"></a>DF_CheckIfBusy</STRONG> (ARM, 240 bytes, Stack size 16 bytes, dataflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c45610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReceive
<LI><a href="#[c4564c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPISend
</UL>
<BR>[Called By]<UL><LI><a href="#[c4438c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ChipErase
<LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
<LI><a href="#[c44404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ErasePage
<LI><a href="#[c44440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteDataBytesIntoBuffer
<LI><a href="#[c4447c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBufferToPage
<LI><a href="#[c444b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ByteProgram
<LI><a href="#[c444f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteDataIntoBuffer
<LI><a href="#[c44530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadBytesFromPage
<LI><a href="#[c4456c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadDataBytesFromBuffer
<LI><a href="#[c445e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadPageToBuffer
<LI><a href="#[c44620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadDataFromBuffer
</UL>

<P><STRONG><a name="[c44620]"></a>DF_ReadDataFromBuffer</STRONG> (ARM, 192 bytes, Stack size 16 bytes, dataflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DF_ReadDataFromBuffer &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c4465c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_CheckIfBusy
<LI><a href="#[c45610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReceive
<LI><a href="#[c4564c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPISend
</UL>
<BR>[Called By]<UL><LI><a href="#[c42a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPartialMessage
<LI><a href="#[c42a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[c445a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadPage
</UL>

<P><STRONG><a name="[c445e4]"></a>DF_ReadPageToBuffer</STRONG> (ARM, 280 bytes, Stack size 24 bytes, dataflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DF_ReadPageToBuffer &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c4465c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_CheckIfBusy
<LI><a href="#[c45610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReceive
<LI><a href="#[c4564c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPISend
</UL>
<BR>[Called By]<UL><LI><a href="#[c42a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPartialMessage
<LI><a href="#[c42a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[c4438c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ChipErase
<LI><a href="#[c445a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadPage
</UL>

<P><STRONG><a name="[c445a8]"></a>DF_ReadPage</STRONG> (ARM, 72 bytes, Stack size 16 bytes, dataflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DF_ReadPage &rArr; DF_ReadPageToBuffer &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c445e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadPageToBuffer
<LI><a href="#[c44620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadDataFromBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
</UL>

<P><STRONG><a name="[c4456c]"></a>DF_ReadDataBytesFromBuffer</STRONG> (ARM, 260 bytes, Stack size 32 bytes, dataflash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c4465c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_CheckIfBusy
<LI><a href="#[c45610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReceive
<LI><a href="#[c4564c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPISend
</UL>

<P><STRONG><a name="[c44530]"></a>DF_ReadBytesFromPage</STRONG> (ARM, 304 bytes, Stack size 32 bytes, dataflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DF_ReadBytesFromPage &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c4465c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_CheckIfBusy
<LI><a href="#[c45610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReceive
<LI><a href="#[c4564c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPISend
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
<LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer
<LI><a href="#[c428d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[c42a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPartialMessage
<LI><a href="#[c42a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c444f4]"></a>DF_WriteDataIntoBuffer</STRONG> (ARM, 192 bytes, Stack size 16 bytes, dataflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DF_WriteDataIntoBuffer &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c4465c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_CheckIfBusy
<LI><a href="#[c4564c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPISend
</UL>
<BR>[Called By]<UL><LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS
<LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
</UL>

<P><STRONG><a name="[c444b8]"></a>DF_ByteProgram</STRONG> (ARM, 220 bytes, Stack size 24 bytes, dataflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c4465c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_CheckIfBusy
<LI><a href="#[c4564c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPISend
</UL>
<BR>[Called By]<UL><LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
<LI><a href="#[c4447c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBufferToPage
</UL>

<P><STRONG><a name="[c4447c]"></a>DF_WriteBufferToPage</STRONG> (ARM, 200 bytes, Stack size 24 bytes, dataflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c444b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ByteProgram
<LI><a href="#[c4465c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_CheckIfBusy
<LI><a href="#[c4564c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPISend
</UL>
<BR>[Called By]<UL><LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS
<LI><a href="#[c4438c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ChipErase
<LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
</UL>

<P><STRONG><a name="[c44440]"></a>DF_WriteDataBytesIntoBuffer</STRONG> (ARM, 260 bytes, Stack size 32 bytes, dataflash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c4465c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_CheckIfBusy
<LI><a href="#[c4564c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPISend
</UL>

<P><STRONG><a name="[c44404]"></a>DF_ErasePage</STRONG> (ARM, 328 bytes, Stack size 24 bytes, dataflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DF_ErasePage &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c4465c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_CheckIfBusy
<LI><a href="#[c4564c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPISend
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
<LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS
<LI><a href="#[c42910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToMeter
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
<LI><a href="#[c4438c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ChipErase
<LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
</UL>

<P><STRONG><a name="[c443c8]"></a>DF_WriteBytesToPage</STRONG> (ARM, 368 bytes, Stack size 40 bytes, dataflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c44404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ErasePage
<LI><a href="#[c4447c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBufferToPage
<LI><a href="#[c444b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ByteProgram
<LI><a href="#[c444f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteDataIntoBuffer
<LI><a href="#[c445a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadPage
<LI><a href="#[c4465c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_CheckIfBusy
<LI><a href="#[c45610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReceive
<LI><a href="#[c4564c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPISend
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
<LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS
<LI><a href="#[c428d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[c42910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToMeter
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c4438c]"></a>DF_ChipErase</STRONG> (ARM, 248 bytes, Stack size 16 bytes, dataflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DF_ChipErase &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c44404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ErasePage
<LI><a href="#[c4447c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBufferToPage
<LI><a href="#[c445e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadPageToBuffer
<LI><a href="#[c4465c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_CheckIfBusy
<LI><a href="#[c4564c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPISend
</UL>
<BR>[Called By]<UL><LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
</UL>

<P><STRONG><a name="[c44350]"></a>DF_DisableBlkProt</STRONG> (ARM, 192 bytes, Stack size 8 bytes, dataflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DF_DisableBlkProt
</UL>
<BR>[Calls]<UL><LI><a href="#[c4564c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPISend
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS
</UL>

<P><STRONG><a name="[c44314]"></a>Read_ID</STRONG> (ARM, 108 bytes, Stack size 16 bytes, dataflash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c45610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReceive
<LI><a href="#[c4564c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPISend
</UL>

<P><STRONG><a name="[c43a2c]"></a>LCD_DefineChar</STRONG> (ARM, 108 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_DefineChar &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c43f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteControl
<LI><a href="#[c43fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[c43978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[c439f0]"></a>LCD_CursorOff</STRONG> (ARM, 24 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_CursorOff &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c43f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteControl
</UL>
<BR>[Called By]<UL><LI><a href="#[c43978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[c439b4]"></a>LCD_Clear</STRONG> (ARM, 36 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_Clear &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c43f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteControl
</UL>
<BR>[Called By]<UL><LI><a href="#[c4078c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForAcceptance
<LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
<LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS
<LI><a href="#[c41308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCreditCardAmount
<LI><a href="#[c41344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_Card
<LI><a href="#[c428d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
<LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c42a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPartialMessage
<LI><a href="#[c42a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[c42a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMainMenu
<LI><a href="#[c42af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialFixedNo
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
<LI><a href="#[c43978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[c43978]"></a>LCD_Init</STRONG> (ARM, 248 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_Init &rArr; LCD_DefineChar &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c439f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CursorOff
<LI><a href="#[c43a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DefineChar
<LI><a href="#[c43f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c428d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c4393c]"></a>LCD_Home</STRONG> (ARM, 24 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c43f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteControl
</UL>

<P><STRONG><a name="[c43900]"></a>LCD_DisplayCharacter</STRONG> (ARM, 108 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_DisplayCharacter &rArr; LCD_WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[c43fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS
<LI><a href="#[c41308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCreditCardAmount
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
<LI><a href="#[c42a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[c42af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialFixedNo
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
<LI><a href="#[c436e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WipeOffRL
<LI><a href="#[c43720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WipeOffLR
<LI><a href="#[c4375c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WipeOnRL
<LI><a href="#[c43798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WipeOnLR
<LI><a href="#[c43810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayRow
<LI><a href="#[c4384c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringCentered
<LI><a href="#[c43888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
</UL>

<P><STRONG><a name="[c438c4]"></a>LCD_Cursor</STRONG> (ARM, 164 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_Cursor &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c43f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteControl
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS
<LI><a href="#[c41308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCreditCardAmount
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
<LI><a href="#[c42a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[c42af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialFixedNo
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
<LI><a href="#[c436e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WipeOffRL
<LI><a href="#[c43720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WipeOffLR
<LI><a href="#[c4375c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WipeOnRL
<LI><a href="#[c43798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WipeOnLR
<LI><a href="#[c43810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayRow
<LI><a href="#[c4384c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringCentered
<LI><a href="#[c43888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
</UL>

<P><STRONG><a name="[c43888]"></a>LCD_DisplayString</STRONG> (ARM, 84 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_DisplayString &rArr; LCD_Cursor &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
</UL>
<BR>[Called By]<UL><LI><a href="#[c4078c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForAcceptance
<LI><a href="#[c41308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCreditCardAmount
<LI><a href="#[c428d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
<LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c42a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPartialMessage
<LI><a href="#[c42a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[c42a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMainMenu
<LI><a href="#[c42af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialFixedNo
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
<LI><a href="#[c4384c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringCentered
</UL>

<P><STRONG><a name="[c4384c]"></a>LCD_DisplayStringCentered</STRONG> (ARM, 176 bytes, Stack size 72 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = LCD_DisplayStringCentered &rArr; LCD_DisplayString &rArr; LCD_Cursor &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c3f634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[c3f724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[c43888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
</UL>
<BR>[Called By]<UL><LI><a href="#[c4078c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForAcceptance
<LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
<LI><a href="#[c41308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCreditCardAmount
<LI><a href="#[c41344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_Card
<LI><a href="#[c428d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
</UL>

<P><STRONG><a name="[c43810]"></a>LCD_DisplayRow</STRONG> (ARM, 80 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_DisplayRow &rArr; LCD_Cursor &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
</UL>
<BR>[Called By]<UL><LI><a href="#[c437d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayScreen
</UL>

<P><STRONG><a name="[c437d4]"></a>LCD_DisplayScreen</STRONG> (ARM, 64 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_DisplayScreen &rArr; LCD_DisplayRow &rArr; LCD_Cursor &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c43810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayRow
</UL>
<BR>[Called By]<UL><LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c43798]"></a>LCD_WipeOnLR</STRONG> (ARM, 164 bytes, Stack size 16 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
</UL>

<P><STRONG><a name="[c4375c]"></a>LCD_WipeOnRL</STRONG> (ARM, 164 bytes, Stack size 16 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
</UL>

<P><STRONG><a name="[c43720]"></a>LCD_WipeOffLR</STRONG> (ARM, 132 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
</UL>

<P><STRONG><a name="[c436e4]"></a>LCD_WipeOffRL</STRONG> (ARM, 132 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
</UL>

<P><STRONG><a name="[c436a8]"></a>LCD_CursorLeft</STRONG> (ARM, 24 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c43f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteControl
</UL>

<P><STRONG><a name="[c4366c]"></a>LCD_CursorRight</STRONG> (ARM, 24 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c43f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteControl
</UL>

<P><STRONG><a name="[c43630]"></a>LCD_CursorOn</STRONG> (ARM, 24 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c43f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteControl
</UL>

<P><STRONG><a name="[c435f4]"></a>LCD_DisplayOff</STRONG> (ARM, 36 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c43f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteControl
</UL>

<P><STRONG><a name="[c435b8]"></a>LCD_DisplayOn</STRONG> (ARM, 36 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c43f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteControl
</UL>

<P><STRONG><a name="[c42c94]"></a>Keypad_Init</STRONG> (ARM, 264 bytes, Stack size 0 bytes, keypad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c42c58]"></a>Keypad_GetKey</STRONG> (ARM, 600 bytes, Stack size 24 bytes, keypad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Keypad_GetKey
</UL>
<BR>[Calls]<UL><LI><a href="#[c42fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_MakeScanLineLow
<LI><a href="#[c43018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_IsRetLineLow
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c4078c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForAcceptance
<LI><a href="#[c41308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCreditCardAmount
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
<LI><a href="#[c42a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[c42af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialFixedNo
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c42c1c]"></a>LockKey</STRONG> (ARM, 484 bytes, Stack size 0 bytes, keypad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c42be0]"></a>IsKeyLocked</STRONG> (ARM, 492 bytes, Stack size 0 bytes, keypad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c42ba4]"></a>Process_KeyPad</STRONG> (ARM, 3372 bytes, Stack size 40 bytes, keypad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = Process_KeyPad &rArr; LogUserOut &rArr; SendCommandToMeter &rArr; DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c3f724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[c428d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[c42910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToMeter
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
<LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c42a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPartialMessage
<LI><a href="#[c42a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[c42a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMainMenu
<LI><a href="#[c42ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialOtherNo
<LI><a href="#[c42af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialFixedNo
<LI><a href="#[c42b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyToAckBuffer
<LI><a href="#[c42be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyLocked
<LI><a href="#[c42c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockKey
<LI><a href="#[c42c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_GetKey
<LI><a href="#[c437d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayScreen
<LI><a href="#[c43888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
<LI><a href="#[c43978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
<LI><a href="#[c44404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ErasePage
<LI><a href="#[c44530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadBytesFromPage
<LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c42b68]"></a>UnLockKey</STRONG> (ARM, 484 bytes, Stack size 0 bytes, keypad.o(.text), UNUSED)

<P><STRONG><a name="[c42190]"></a>EINT1_Handler</STRONG> (ARM, 376 bytes, Stack size 24 bytes, extint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>

<P><STRONG><a name="[c42154]"></a>EINTInit</STRONG> (ARM, 124 bytes, Stack size 8 bytes, extint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EINTInit &rArr; install_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[c47d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c419d4]"></a>WDTHandler</STRONG> (ARM, 60 bytes, Stack size 8 bytes, wdt.o(.text), UNUSED)

<P><STRONG><a name="[c41998]"></a>WDTInit</STRONG> (ARM, 88 bytes, Stack size 8 bytes, wdt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WDTInit &rArr; install_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[c47d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
</UL>

<P><STRONG><a name="[c4195c]"></a>WDTFeed</STRONG> (ARM, 24 bytes, Stack size 0 bytes, wdt.o(.text), UNUSED)

<P><STRONG><a name="[c41344]"></a>Process_Card</STRONG> (ARM, 364 bytes, Stack size 16 bytes, cardreader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = Process_Card &rArr; GetCreditCardAmount &rArr; WaitForAcceptance &rArr; ProcessUartRxBuffers &rArr; ProcessBuffer &rArr; ParseCommandForMeter &rArr; SendCommandToMeter &rArr; DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c41308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCreditCardAmount
<LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c4384c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringCentered
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c42a3c]"></a>DisplayMessage</STRONG> (ARM, 772 bytes, Stack size 16 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DisplayMessage &rArr; LCD_DisplayString &rArr; LCD_Cursor &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c3f724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[c42c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_GetKey
<LI><a href="#[c43888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c44530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadBytesFromPage
<LI><a href="#[c445e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadPageToBuffer
<LI><a href="#[c44620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadDataFromBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c429c4]"></a>DisplayWelcomeScreen</STRONG> (ARM, 268 bytes, Stack size 8 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DisplayWelcomeScreen &rArr; DisplayMessage &rArr; LCD_DisplayString &rArr; LCD_Cursor &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c42a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[c43888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c406d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCommandForMeter
<LI><a href="#[c4078c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForAcceptance
<LI><a href="#[c41308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCreditCardAmount
<LI><a href="#[c41344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_Card
<LI><a href="#[c428d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserIn
<LI><a href="#[c42ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialOtherNo
<LI><a href="#[c42af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialFixedNo
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c42b2c]"></a>CopyToAckBuffer</STRONG> (ARM, 704 bytes, Stack size 12 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CopyToAckBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
<LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer
<LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS
<LI><a href="#[c428d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c409a8]"></a>ProcessIOCommand</STRONG> (ARM, 464 bytes, Stack size 0 bytes, miscfunctions.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer
</UL>

<P><STRONG><a name="[c4096c]"></a>SaveSMS</STRONG> (ARM, 444 bytes, Stack size 40 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SaveSMS &rArr; DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c3f724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[c42b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyToAckBuffer
<LI><a href="#[c437d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayScreen
<LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c44350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_DisableBlkProt
<LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
<LI><a href="#[c44404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ErasePage
<LI><a href="#[c4447c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBufferToPage
<LI><a href="#[c444f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteDataIntoBuffer
<LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer
</UL>

<P><STRONG><a name="[c40930]"></a>CheckDateTime</STRONG> (ARM, 264 bytes, Stack size 16 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CheckDateTime
</UL>
<BR>[Called By]<UL><LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer
</UL>

<P><STRONG><a name="[c408f4]"></a>ProcessBuffer</STRONG> (ARM, 1684 bytes, Stack size 40 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ProcessBuffer &rArr; ParseCommandForMeter &rArr; SendCommandToMeter &rArr; DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c3f724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[c3f814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
<LI><a href="#[c406d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCommandForMeter
<LI><a href="#[c40750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvAscToHex
<LI><a href="#[c40930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDateTime
<LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS
<LI><a href="#[c409a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIOCommand
<LI><a href="#[c42910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToMeter
<LI><a href="#[c42b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyToAckBuffer
<LI><a href="#[c44530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadBytesFromPage
<LI><a href="#[c44cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1Send
<LI><a href="#[c44d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Send
<LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
</UL>

<P><STRONG><a name="[c408b8]"></a>ProcessUartRxBuffers</STRONG> (ARM, 2480 bytes, Stack size 40 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = ProcessUartRxBuffers &rArr; ProcessBuffer &rArr; ParseCommandForMeter &rArr; SendCommandToMeter &rArr; DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c3f508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[c3f814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
<LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer
<LI><a href="#[c41998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDTInit
<LI><a href="#[c42b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyToAckBuffer
<LI><a href="#[c4384c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringCentered
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c4438c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ChipErase
<LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
<LI><a href="#[c44404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ErasePage
<LI><a href="#[c44530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadBytesFromPage
<LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c4078c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForAcceptance
</UL>

<P><STRONG><a name="[c4087c]"></a>ProcessUartTxBuffers</STRONG> (ARM, 1596 bytes, Stack size 32 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ProcessUartTxBuffers &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c3f2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[c44d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0SendBuffer
<LI><a href="#[c44d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Send
<LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c40840]"></a>SendDataToModem</STRONG> (ARM, 120 bytes, Stack size 8 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SendDataToModem
</UL>
<BR>[Calls]<UL><LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c428d4]"></a>SendMessage</STRONG> (ARM, 1672 bytes, Stack size 32 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = SendMessage &rArr; SendCommandToMeter &rArr; DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c3f238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[c42910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToMeter
<LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c42b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyToAckBuffer
<LI><a href="#[c4384c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringCentered
<LI><a href="#[c43888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[c43978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
<LI><a href="#[c44530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadBytesFromPage
<LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c42a78]"></a>DisplayMainMenu</STRONG> (ARM, 364 bytes, Stack size 8 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DisplayMainMenu &rArr; LCD_DisplayString &rArr; LCD_Cursor &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c43888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c42a00]"></a>DisplayPartialMessage</STRONG> (ARM, 724 bytes, Stack size 8 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DisplayPartialMessage &rArr; LCD_DisplayString &rArr; LCD_Cursor &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c43888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c44530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadBytesFromPage
<LI><a href="#[c445e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadPageToBuffer
<LI><a href="#[c44620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadDataFromBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c42af0]"></a>DialFixedNo</STRONG> (ARM, 392 bytes, Stack size 16 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DialFixedNo &rArr; DisplayWelcomeScreen &rArr; DisplayMessage &rArr; LCD_DisplayString &rArr; LCD_Cursor &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c42c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_GetKey
<LI><a href="#[c43888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c44d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Send
<LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c42ab4]"></a>DialOtherNo</STRONG> (ARM, 24 bytes, Stack size 8 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DialOtherNo &rArr; DisplayWelcomeScreen &rArr; DisplayMessage &rArr; LCD_DisplayString &rArr; LCD_Cursor &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c42988]"></a>LogUserIn</STRONG> (ARM, 1008 bytes, Stack size 40 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LogUserIn &rArr; DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c41998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDTInit
<LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c42c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_GetKey
<LI><a href="#[c43888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
<LI><a href="#[c44404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ErasePage
<LI><a href="#[c44d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Send
<LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c4294c]"></a>LogUserOut</STRONG> (ARM, 976 bytes, Stack size 48 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = LogUserOut &rArr; SendCommandToMeter &rArr; DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c41998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDTInit
<LI><a href="#[c42910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToMeter
<LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c42c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_GetKey
<LI><a href="#[c43888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
<LI><a href="#[c44404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ErasePage
<LI><a href="#[c44d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Send
<LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c40804]"></a>InitIOS</STRONG> (ARM, 396 bytes, Stack size 0 bytes, miscfunctions.o(.text), UNUSED)

<P><STRONG><a name="[c407c8]"></a>CheckIOS</STRONG> (ARM, 468 bytes, Stack size 16 bytes, miscfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>

<P><STRONG><a name="[c4078c]"></a>WaitForAcceptance</STRONG> (ARM, 432 bytes, Stack size 16 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WaitForAcceptance &rArr; ProcessUartRxBuffers &rArr; ProcessBuffer &rArr; ParseCommandForMeter &rArr; SendCommandToMeter &rArr; DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
<LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c42c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_GetKey
<LI><a href="#[c4384c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringCentered
<LI><a href="#[c43888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c44d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Send
<LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c41308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCreditCardAmount
</UL>

<P><STRONG><a name="[c41308]"></a>GetCreditCardAmount</STRONG> (ARM, 1312 bytes, Stack size 48 bytes, miscfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = GetCreditCardAmount &rArr; WaitForAcceptance &rArr; ProcessUartRxBuffers &rArr; ProcessBuffer &rArr; ParseCommandForMeter &rArr; SendCommandToMeter &rArr; DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c3f238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[c4078c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForAcceptance
<LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c42c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_GetKey
<LI><a href="#[c4384c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringCentered
<LI><a href="#[c43888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c44d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Send
<LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c41344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_Card
</UL>

<P><STRONG><a name="[c3ff1c]"></a>main</STRONG> (ARM, 2212 bytes, Stack size 16 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = main &rArr; Process_Card &rArr; GetCreditCardAmount &rArr; WaitForAcceptance &rArr; ProcessUartRxBuffers &rArr; ProcessBuffer &rArr; ParseCommandForMeter &rArr; SendCommandToMeter &rArr; DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c40840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToModem
<LI><a href="#[c4087c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartTxBuffers
<LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
<LI><a href="#[c41344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_Card
<LI><a href="#[c42154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINTInit
<LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c42b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyToAckBuffer
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
<LI><a href="#[c42c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_Init
<LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
<LI><a href="#[c43978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[c44350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_DisableBlkProt
<LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
<LI><a href="#[c44404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ErasePage
<LI><a href="#[c44530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ReadBytesFromPage
<LI><a href="#[c44d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Send
<LI><a href="#[c44da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1Init
<LI><a href="#[c44ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Init
<LI><a href="#[c45688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIInit
<LI><a href="#[c45c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendACKToMeter
<LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[c45ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer1
<LI><a href="#[c45cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer0
<LI><a href="#[c45d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_timer
<LI><a href="#[c46d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG1
<LI><a href="#[c46d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG1
<LI><a href="#[c46d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG1
<LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
<LI><a href="#[c47dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_VIC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P><STRONG><a name="[c42910]"></a>SendCommandToMeter</STRONG> (ARM, 1292 bytes, Stack size 24 bytes, meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SendCommandToMeter &rArr; DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c443c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_WriteBytesToPage
<LI><a href="#[c44404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_ErasePage
<LI><a href="#[c44cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1Send
<LI><a href="#[c46dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESETFLAG
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c406d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCommandForMeter
<LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer
<LI><a href="#[c428d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[c4294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogUserOut
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad
</UL>

<P><STRONG><a name="[c406d8]"></a>ParseCommandForMeter</STRONG> (ARM, 1208 bytes, Stack size 40 bytes, meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ParseCommandForMeter &rArr; SendCommandToMeter &rArr; DF_WriteBytesToPage &rArr; DF_WriteBufferToPage &rArr; DF_ByteProgram &rArr; DF_CheckIfBusy &rArr; SPIReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[c3f508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[c42910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToMeter
<LI><a href="#[c429c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayWelcomeScreen
<LI><a href="#[c44cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1Send
<LI><a href="#[c46e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer
</UL>

<P><STRONG><a name="[c45c28]"></a>SendACKToMeter</STRONG> (ARM, 64 bytes, Stack size 16 bytes, meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SendACKToMeter
</UL>
<BR>[Calls]<UL><LI><a href="#[c44cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1Send
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ff1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c45e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Handler
</UL>

<P><STRONG><a name="[c3faa8]"></a>SendNACKToMeter</STRONG> (ARM, 64 bytes, Stack size 16 bytes, meter.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c44cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1Send
</UL>

<P><STRONG><a name="[c40750]"></a>ConvAscToHex</STRONG> (ARM, 196 bytes, Stack size 16 bytes, meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ConvAscToHex
</UL>
<BR>[Called By]<UL><LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer
</UL>

<P><STRONG><a name="[c3f814]"></a>strcpy</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers (via Veneer)
<LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer (via Veneer)
</UL>

<P><STRONG><a name="[c3f724]"></a>strlen</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[c408f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessBuffer (via Veneer)
<LI><a href="#[c4096c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSMS (via Veneer)
<LI><a href="#[c42a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage (via Veneer)
<LI><a href="#[c42ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_KeyPad (via Veneer)
<LI><a href="#[c4384c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringCentered (via Veneer)
</UL>

<P><STRONG><a name="[c3f634]"></a>strncpy</STRONG> (ARM, 108 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c3e284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[c4384c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringCentered
</UL>

<P><STRONG><a name="[c3f508]"></a>strcmp</STRONG> (ARM, 156 bytes, Stack size 4 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[c406d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCommandForMeter
<LI><a href="#[c408b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartRxBuffers
</UL>

<P><STRONG><a name="[c3f2ec]"></a>__aeabi_idiv</STRONG> (ARM, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[c3f2b0]"></a>__aeabi_idivmod</STRONG> (ARM, 384 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c4087c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUartTxBuffers
</UL>

<P><STRONG><a name="[c3e98c]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[c3e950]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[c3e914]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[c3e284]"></a>__aeabi_memclr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3f634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[c3e248]"></a>__rt_memclr</STRONG> (ARM, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3d8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[c3e20c]"></a>_memset</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[c3d960]"></a>__aeabi_memclr4</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[c3d924]"></a>__aeabi_memclr8</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[c3d8e8]"></a>__rt_memclr_w</STRONG> (ARM, 84 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[c3d8ac]"></a>_memset_w</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c3e248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[c3d7bc]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[c3c934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[c485a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[c3dbb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[c3d654]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c3c844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
<LI><a href="#[c3d5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[c3ddd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[c3c970]"></a>__user_libspace</STRONG> (ARM, 12 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[c3c934]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3d7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c3c8f8]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[c3a954]"></a>_sys_exit</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3a6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[14c3a54]"></a>__I$use$semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[14c3a18]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c3f274]"></a>__aeabi_uidiv</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv), UNUSED)

<P><STRONG><a name="[c3f238]"></a>__aeabi_uidivmod</STRONG> (ARM, 28 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv))
<BR><BR>[Calls]<UL><LI><a href="#[c3f328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div_large
<LI><a href="#[c3f364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div4
<LI><a href="#[c3f3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div8
</UL>
<BR>[Called By]<UL><LI><a href="#[c41308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCreditCardAmount
<LI><a href="#[c428d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[c44da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1Init
<LI><a href="#[c44ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Init
</UL>

<P><STRONG><a name="[c3aa80]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[c3aa44]"></a>_fp_init</STRONG> (ARM, 4 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[c3cfc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c487c0]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c487c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c487c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c48784]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c48784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c48784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c48748]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c48748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c48748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c4870c]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c4870c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c4870c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c486d0]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c486d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c486d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c48694]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c48694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c48694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c458a4]"></a>SPIReceiveByte</STRONG> (ARM, 48 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c45610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReceive
</UL>

<P><STRONG><a name="[c43fcc]"></a>LCD_WriteData</STRONG> (ARM, 520 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[c43900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayCharacter
<LI><a href="#[c43a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DefineChar
</UL>

<P><STRONG><a name="[c43f90]"></a>LCD_WriteControl</STRONG> (ARM, 652 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[c46df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETFLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[c435b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOn
<LI><a href="#[c435f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOff
<LI><a href="#[c43630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CursorOn
<LI><a href="#[c4366c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CursorRight
<LI><a href="#[c436a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CursorLeft
<LI><a href="#[c438c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[c4393c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Home
<LI><a href="#[c439b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c439f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CursorOff
<LI><a href="#[c43a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DefineChar
<LI><a href="#[c43f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitDriver
</UL>

<P><STRONG><a name="[c43f54]"></a>LCD_InitDriver</STRONG> (ARM, 212 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_InitDriver &rArr; LCD_WriteControl
</UL>
<BR>[Calls]<UL><LI><a href="#[c43f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteControl
<LI><a href="#[c45c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[c43978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[c43018]"></a>Keypad_IsRetLineLow</STRONG> (ARM, 244 bytes, Stack size 0 bytes, keypad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c42c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_GetKey
</UL>

<P><STRONG><a name="[c42fdc]"></a>Keypad_MakeScanLineLow</STRONG> (ARM, 164 bytes, Stack size 0 bytes, keypad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c42c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_GetKey
</UL>

<P><STRONG><a name="[c3f3a0]"></a>__arm_div8</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3f238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[c3f364]"></a>__arm_div4</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3f238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[c3f328]"></a>__arm_div_large</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3f238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[c3d5dc]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[c3d654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
